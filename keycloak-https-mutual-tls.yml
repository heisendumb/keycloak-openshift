---
kind: Service
apiVersion: v1
metadata:
  name: keycloak-service
spec:
  selector:
    deploymentconfig: keycloak
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
kind: Service
apiVersion: v1
metadata:
  name: keycloak-cluster
  labels:
    application: keycloak
spec:
  selector:
    deploymentconfig: "keycloak"
  clusterIP: None
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---      
kind: Service
apiVersion: v1
spec:
  ports:
  - port: 8443
    targetPort: 8443
    name: 8443-tcp
  selector:
    deploymentConfig: keycloak
metadata:
  name: secure-keycloak
  labels:
    application: keycloak
  annotations:
    description: The web server's https port.
    service.alpha.openshift.io/serving-cert-secret-name: keycloak-x509-https-secret
---
apiVersion: v1
kind: Route
metadata:
  annotations:
    haproxy.router.openshift.io/ip_whitelist: 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 169.254.0.0/16
  labels:
    application: keycloak
  name: secure-admin-keycloak
  namespace: sso
spec:
  host: sso.example.com
  path: /auth/realms/master/
  port:
    targetPort: 8443-tcp
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect
    caCertificate:
    certificate:
    key:
  to:
    name: secure-keycloak

---
kind: Route
apiVersion: v1
id: "keycloak-https"
metadata:
  name: secure-keycloak
  labels:
    application: keycloak
  annotations:
    description: Route for application's https service.
spec:
  host: "sso.example.com"
  to:
    name: secure-keycloak
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect
    caCertificate:
    certificate: 
    key: 
---
kind: DeploymentConfig
apiVersion: v1
metadata:
  name: keycloak
  labels:
    application: keycloak
spec:
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 1
      maxUnavailable: 1
      timeoutSeconds: 360
      updatePeriodSeconds: 1
    type: Rolling
  triggers:
  - type: ConfigChange
  replicas: 1
  selector:
    deploymentConfig: keycloak
  template:
    metadata:
      name: keycloak
      labels:
        deploymentConfig: keycloak
        application: keycloak
    spec:
      containers:
      - name: keycloak
        image: docker-registry.default.svc:5000/sso/keycloak:latest
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/"
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 240
          timeoutSeconds: 5
          periodSeconds: 10
        ports:
        - containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: "/"
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          timeoutSeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: '2'
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: keycloak-admin-user-secret
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: keycloak-admin-password-secret
        - name: DB_VENDOR
          value: POSTGRES
        - name: DB_ADDR
          value: 
        - name: DB_DATABASE
          value: 
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: postgresql-username-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgresql-password-secret
        - name: X509_CA_BUNDLE
          value: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: "dns.DNS_PING"
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: "dns_query=keycloak-cluster.sso.svc.cluster.local"
        - name: KEYCLOAK_WELCOME_THEME
          value: "keycloak"
        - name: KEYCLOAK_DEFAULT_THEME
          value: "keycloak"
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        securityContext:
          privileged: false
        volumeMounts:
        - name: keycloak-x509-https-volume
          mountPath: "/etc/x509/https"
          readOnly: true
      volumes:
      - name: keycloak-x509-https-volume
        secret:
          secretName: keycloak-x509-https-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-password-secret
  namespace: sso
  labels:
    application: keycloak
stringData:
  password: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-username-secret
  namespace: sso
  labels:
    application: keycloak
stringData:
  username: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-user-secret
  namespace: sso
  labels:
    application: keycloak
data:
  username: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-password-secret
  namespace: sso
  labels:
    application: keycloak
data:
  password: ""
--- 
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: keycloak-scaling
  namespace: sso
spec:
  scaleTargetRef:
    kind: DeploymentConfig 
    name: keycloak 
    apiVersion: v1 
    subresource: scale
  minReplicas: 1 
  maxReplicas: 2
  targetCPUUtilizationPercentage: 90
